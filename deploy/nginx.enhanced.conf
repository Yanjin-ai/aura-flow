# 增强的 Nginx 配置
# 包含安全头、缓存策略、CSP nonce 等

# 上游服务器配置
upstream api_v1 {
    server api:3001;
    keepalive 32;
}

upstream api_v2 {
    server api:3001;
    keepalive 32;
}

# 速率限制配置
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

# 连接限制
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;
    
    # 强制 HTTPS 重定向
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;
    
    # SSL 配置
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全头配置
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # CSP 配置（带 nonce）
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$request_id'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.openai.com https://sentry.io; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # 连接限制
    limit_conn conn_limit_per_ip 20;
    
    # 日志配置
    access_log /var/log/nginx/aura-flow-access.log;
    error_log /var/log/nginx/aura-flow-error.log;
    
    # 根目录配置
    root /usr/share/nginx/html;
    index index.html;
    
    # 静态资源缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        limit_req zone=static burst=50 nodelay;
        
        # 长期缓存（immutable）
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # 压缩
        gzip_static on;
        
        # 安全头
        add_header X-Content-Type-Options "nosniff" always;
        
        try_files $uri =404;
    }
    
    # HTML 文件配置（禁用缓存）
    location ~* \.html$ {
        limit_req zone=static burst=20 nodelay;
        
        # 禁用缓存
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # 注入 nonce
        sub_filter '<script' '<script nonce="$request_id"';
        sub_filter_once off;
        
        try_files $uri =404;
    }
    
    # API 路由配置
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # 禁用缓存
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # 代理到后端
        proxy_pass http://api_v1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # 认证路由特殊限制
    location /api/auth/ {
        limit_req zone=auth burst=10 nodelay;
        
        # 禁用缓存
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        
        # 代理到后端
        proxy_pass http://api_v1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 更严格的超时
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # 健康检查端点
    location /healthz {
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://api_v1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 快速响应
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # 就绪检查端点
    location /readyz {
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://api_v1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 快速响应
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # 监控端点（限制访问）
    location /metrics {
        limit_req zone=api burst=5 nodelay;
        
        # 只允许内网访问
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://api_v1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 安全文件
    location /.well-known/security.txt {
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Cache-Control "public, max-age=86400";
    }
    
    # robots.txt
    location /robots.txt {
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Cache-Control "public, max-age=86400";
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~ \.(bak|backup|old|orig|save|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 主页面配置
    location / {
        limit_req zone=static burst=20 nodelay;
        
        # 禁用缓存
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # 注入 nonce
        sub_filter '<script' '<script nonce="$request_id"';
        sub_filter_once off;
        
        try_files $uri $uri/ /index.html;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    location = /50x.html {
        internal;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
}
