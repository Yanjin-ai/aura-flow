# Docker Compose 配置文件
# 用于本地开发和测试环境

version: '3.8'

services:
  # 前端开发服务器
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-builder
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:3001
      - VITE_AI_PROVIDER=mock
      - VITE_ENABLE_TELEMETRY=false
    command: pnpm dev --host
    profiles:
      - dev

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "3001:3001"
    volumes:
      - ./server/logs:/app/server/logs
      - ./server/uploads:/app/server/uploads
      - ./server/dev.db:/app/server/dev.db
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:./dev.db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - VITE_BUILD_VERSION=dev
    depends_on:
      - db
    restart: unless-stopped

  # PostgreSQL 数据库（生产环境）
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=auraflow
      - POSTGRES_USER=auraflow
      - POSTGRES_PASSWORD=auraflow_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - production

  # Redis 缓存（可选）
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - production

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: auraflow-network
