name: Trivy Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0'  # 每周日 UTC 3:00 运行

env:
  TRIVY_VERSION: 0.45.0

jobs:
  # 扫描应用依赖
  dependency-scan:
    name: Dependency Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install -g pnpm
        pnpm install --frozen-lockfile

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Scan frontend dependencies
      run: |
        trivy fs --format table --severity HIGH,CRITICAL --exit-code 1 ./
        trivy fs --format json --output trivy-frontend-results.json ./

    - name: Scan backend dependencies
      run: |
        cd server
        trivy fs --format table --severity HIGH,CRITICAL --exit-code 1 ./
        trivy fs --format json --output ../trivy-backend-results.json ./

    - name: Upload Trivy scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: trivy-dependency-results
        path: |
          trivy-frontend-results.json
          trivy-backend-results.json
        retention-days: 30

  # 扫描 Docker 镜像
  image-scan:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    needs: dependency-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -f Dockerfile.backend -t aura-flow-backend:test .

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Scan Docker image
      run: |
        trivy image --format table --severity HIGH,CRITICAL --exit-code 1 aura-flow-backend:test
        trivy image --format json --output trivy-image-results.json aura-flow-backend:test

    - name: Upload Trivy image scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: trivy-image-results
        path: trivy-image-results.json
        retention-days: 30

  # 扫描配置文件
  config-scan:
    name: Configuration Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Scan configuration files
      run: |
        trivy config --format table --severity HIGH,CRITICAL --exit-code 1 ./
        trivy config --format json --output trivy-config-results.json ./

    - name: Upload Trivy config scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: trivy-config-results
        path: trivy-config-results.json
        retention-days: 30

  # 生成安全报告
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, image-scan, config-scan]
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all Trivy results
      uses: actions/download-artifact@v3
      with:
        path: trivy-results/

    - name: Generate security report
      run: |
        echo "# Security Scan Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        
        echo "## Dependency Scan Results" >> security-report.md
        if [ -f "trivy-results/trivy-dependency-results/trivy-frontend-results.json" ]; then
          echo "### Frontend Dependencies" >> security-report.md
          jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | "- \(.VulnerabilityID): \(.Severity) - \(.Title)"' trivy-results/trivy-dependency-results/trivy-frontend-results.json >> security-report.md || echo "No vulnerabilities found" >> security-report.md
        fi
        
        if [ -f "trivy-results/trivy-dependency-results/trivy-backend-results.json" ]; then
          echo "### Backend Dependencies" >> security-report.md
          jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | "- \(.VulnerabilityID): \(.Severity) - \(.Title)"' trivy-results/trivy-dependency-results/trivy-backend-results.json >> security-report.md || echo "No vulnerabilities found" >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Docker Image Scan Results" >> security-report.md
        if [ -f "trivy-results/trivy-image-results/trivy-image-results.json" ]; then
          jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | "- \(.VulnerabilityID): \(.Severity) - \(.Title)"' trivy-results/trivy-image-results/trivy-image-results.json >> security-report.md || echo "No vulnerabilities found" >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Configuration Scan Results" >> security-report.md
        if [ -f "trivy-results/trivy-config-results/trivy-config-results.json" ]; then
          jq -r '.Results[] | select(.Misconfigurations != null) | .Misconfigurations[] | "- \(.ID): \(.Severity) - \(.Title)"' trivy-results/trivy-config-results/trivy-config-results.json >> security-report.md || echo "No misconfigurations found" >> security-report.md
        fi

    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.md
        retention-days: 30

    - name: Comment PR with security report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('security-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
