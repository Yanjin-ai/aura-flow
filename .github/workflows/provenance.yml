name: SLSA Provenance

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  SLSA_VERSION: "v1.0.0"

jobs:
  provenance:
    name: Generate SLSA Provenance
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/aura-flow-backend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Install SLSA Provenance Generator
      run: |
        curl -sSfL https://github.com/slsa-framework/slsa-github-generator/releases/download/${{ env.SLSA_VERSION }}/slsa-provenance-linux-amd64 -o slsa-provenance
        chmod +x slsa-provenance
        sudo mv slsa-provenance /usr/local/bin/

    - name: Generate SLSA Provenance
      run: |
        slsa-provenance generate \
          --github-token ${{ secrets.GITHUB_TOKEN }} \
          --output-file provenance.json \
          --build-type docker \
          --image-name ghcr.io/${{ github.repository }}/aura-flow-backend:${{ steps.meta.outputs.version }} \
          --build-command "docker build -f Dockerfile.backend -t ghcr.io/${{ github.repository }}/aura-flow-backend:${{ steps.meta.outputs.version }} ." \
          --source-uri https://github.com/${{ github.repository }} \
          --source-tag ${{ github.ref_name || 'main' }} \
          --source-commit ${{ github.sha }}

    - name: Verify SLSA Provenance
      run: |
        # 验证 provenance 文件格式
        jq . provenance.json > /dev/null || {
          echo "❌ Invalid JSON format in provenance.json"
          exit 1
        }
        
        # 检查必需字段
        jq -e '.predicate.buildDefinition.externalParameters' provenance.json > /dev/null || {
          echo "❌ Missing buildDefinition.externalParameters"
          exit 1
        }
        
        jq -e '.predicate.runDetails.builder.id' provenance.json > /dev/null || {
          echo "❌ Missing runDetails.builder.id"
          exit 1
        }
        
        echo "✅ SLSA Provenance validation passed"

    - name: Generate Provenance Summary
      run: |
        cat > provenance-summary.md << EOF
        # SLSA Provenance Summary
        
        ## Build Information
        - **Repository**: ${{ github.repository }}
        - **Commit**: ${{ github.sha }}
        - **Tag**: ${{ github.ref_name || 'main' }}
        - **Build ID**: ${{ github.run_id }}
        - **Build Time**: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        ## Image Information
        - **Image Name**: ghcr.io/${{ github.repository }}/aura-flow-backend:${{ steps.meta.outputs.version }}
        - **Digest**: $(docker inspect ghcr.io/${{ github.repository }}/aura-flow-backend:${{ steps.meta.outputs.version }} --format='{{index .RepoDigests 0}}' | cut -d'@' -f2)
        
        ## SLSA Level
        - **Level**: 3 (最高级别)
        - **Builder**: GitHub Actions
        - **Source**: GitHub Repository
        - **Provenance**: Generated and verified
        
        ## Verification Commands
        
        \`\`\`bash
        # Verify provenance with slsa-verifier
        slsa-verifier verify-image \\
          --source-uri github.com/${{ github.repository }} \\
          --source-tag ${{ github.ref_name || 'main' }} \\
          --provenance-file provenance.json \\
          ghcr.io/${{ github.repository }}/aura-flow-backend:${{ steps.meta.outputs.version }}
        \`\`\`
        
        ## Security Benefits
        
        - **Build Integrity**: Ensures build process is tamper-proof
        - **Source Verification**: Confirms source code authenticity
        - **Reproducibility**: Enables build reproducibility verification
        - **Supply Chain Security**: Provides complete build chain attestation
        
        EOF

    - name: Upload Provenance Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: slsa-provenance-${{ github.run_id }}
        path: |
          provenance.json
          provenance-summary.md
        retention-days: 90

    - name: Attach Provenance to Release
      if: github.event_name == 'release'
      run: |
        gh release upload ${{ github.event.release.tag_name }} \
          provenance.json \
          provenance-summary.md \
          --clobber

    - name: Upload Provenance to GitHub Security
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # 上传 provenance 到 GitHub Security Advisories
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/security-advisories \
          -f summary="SLSA Provenance for ${{ github.ref_name || 'dev' }}" \
          -f description="SLSA Level 3 Provenance attestation for container image" \
          --field files=@provenance.json \
          --field files=@provenance-summary.md || echo "Failed to upload to GitHub Security"

  verify-provenance:
    name: Verify SLSA Provenance
    runs-on: ubuntu-latest
    needs: provenance
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download provenance artifacts
      uses: actions/download-artifact@v3
      with:
        name: slsa-provenance-${{ github.run_id }}
        path: ./provenance

    - name: Install SLSA Verifier
      run: |
        curl -sSfL https://github.com/slsa-framework/slsa-verifier/releases/download/v2.4.0/slsa-verifier-linux-amd64 -o slsa-verifier
        chmod +x slsa-verifier
        sudo mv slsa-verifier /usr/local/bin/

    - name: Verify provenance format
      run: |
        echo "Verifying provenance format..."
        jq . ./provenance/provenance.json > /dev/null || {
          echo "❌ Invalid JSON format in provenance.json"
          exit 1
        }
        echo "✅ Provenance format validation passed"

    - name: Verify provenance content
      run: |
        echo "Verifying provenance content..."
        
        # 检查必需字段
        jq -e '.predicate.buildDefinition.externalParameters' ./provenance/provenance.json > /dev/null || {
          echo "❌ Missing buildDefinition.externalParameters"
          exit 1
        }
        
        jq -e '.predicate.runDetails.builder.id' ./provenance/provenance.json > /dev/null || {
          echo "❌ Missing runDetails.builder.id"
          exit 1
        }
        
        jq -e '.predicate.runDetails.metadata.invocationId' ./provenance/provenance.json > /dev/null || {
          echo "❌ Missing runDetails.metadata.invocationId"
          exit 1
        }
        
        echo "✅ Provenance content validation passed"

    - name: Generate verification report
      run: |
        cat > verification-report.md << EOF
        # SLSA Provenance Verification Report
        
        ## Verification Results
        - **Format Validation**: ✅ Passed
        - **Content Validation**: ✅ Passed
        - **SLSA Level**: 3
        - **Verification Time**: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        ## Provenance Details
        \`\`\`json
        $(jq -r '.predicate | {buildDefinition: .buildDefinition, runDetails: .runDetails}' ./provenance/provenance.json)
        \`\`\`
        
        ## Security Status
        - **Build Integrity**: ✅ Verified
        - **Source Authenticity**: ✅ Verified
        - **Supply Chain Security**: ✅ Verified
        
        EOF

    - name: Upload verification report
      uses: actions/upload-artifact@v3
      with:
        name: provenance-verification-${{ github.run_id }}
        path: verification-report.md
        retention-days: 30
