name: Software Bill of Materials (SBOM)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  SYFT_VERSION: "0.102.0"

jobs:
  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      security-events: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: |
        pnpm install --frozen-lockfile
        cd server && pnpm install --frozen-lockfile

    - name: Build frontend
      run: |
        pnpm build

    - name: Build backend
      run: |
        cd server
        pnpm build

    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v${{ env.SYFT_VERSION }}

    - name: Generate frontend SBOM
      run: |
        syft packages ./dist \
          --output spdx-json \
          --file ./sbom-frontend.spdx.json \
          --name "aura-flow-frontend" \
          --version "${{ github.ref_name || 'dev' }}" \
          --namespace "https://github.com/${{ github.repository }}"

    - name: Generate backend SBOM
      run: |
        syft packages ./server \
          --output spdx-json \
          --file ./sbom-backend.spdx.json \
          --name "aura-flow-backend" \
          --version "${{ github.ref_name || 'dev' }}" \
          --namespace "https://github.com/${{ github.repository }}"

    - name: Generate package.json SBOM
      run: |
        syft packages ./package.json \
          --output spdx-json \
          --file ./sbom-package.spdx.json \
          --name "aura-flow-package" \
          --version "${{ github.ref_name || 'dev' }}" \
          --namespace "https://github.com/${{ github.repository }}"

    - name: Generate server package.json SBOM
      run: |
        syft packages ./server/package.json \
          --output spdx-json \
          --file ./sbom-server-package.spdx.json \
          --name "aura-flow-server-package" \
          --version "${{ github.ref_name || 'dev' }}" \
          --namespace "https://github.com/${{ github.repository }}"

    - name: Upload SBOM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sbom-artifacts-${{ github.run_id }}
        path: |
          sbom-*.spdx.json
        retention-days: 90

    - name: Upload SBOM to GitHub Security
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # 上传到 GitHub Security Advisories
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/security-advisories \
          -f summary="SBOM for ${{ github.ref_name || 'dev' }}" \
          -f description="Software Bill of Materials generated by Syft" \
          --field files=@sbom-frontend.spdx.json \
          --field files=@sbom-backend.spdx.json \
          --field files=@sbom-package.spdx.json \
          --field files=@sbom-server-package.spdx.json || echo "Failed to upload to GitHub Security"

    - name: Attach SBOM to Release
      if: github.event_name == 'release'
      run: |
        gh release upload ${{ github.event.release.tag_name }} \
          sbom-frontend.spdx.json \
          sbom-backend.spdx.json \
          sbom-package.spdx.json \
          sbom-server-package.spdx.json \
          --clobber

  docker-sbom:
    name: Generate Docker Image SBOM
    runs-on: ubuntu-latest
    needs: generate-sbom
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -f Dockerfile.backend -t aura-flow-backend:sbom-test .

    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v${{ env.SYFT_VERSION }}

    - name: Generate Docker image SBOM
      run: |
        syft aura-flow-backend:sbom-test \
          --output spdx-json \
          --file ./sbom-docker.spdx.json \
          --name "aura-flow-docker" \
          --version "${{ github.ref_name || 'dev' }}" \
          --namespace "https://github.com/${{ github.repository }}"

    - name: Upload Docker SBOM
      uses: actions/upload-artifact@v3
      with:
        name: sbom-docker-${{ github.run_id }}
        path: sbom-docker.spdx.json
        retention-days: 90

    - name: Attach Docker SBOM to Release
      if: github.event_name == 'release'
      run: |
        gh release upload ${{ github.event.release.tag_name }} \
          sbom-docker.spdx.json \
          --clobber

  sbom-validation:
    name: Validate SBOM
    runs-on: ubuntu-latest
    needs: generate-sbom

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download SBOM artifacts
      uses: actions/download-artifact@v3
      with:
        name: sbom-artifacts-${{ github.run_id }}
        path: ./sbom-files

    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin v${{ env.SYFT_VERSION }}

    - name: Validate SBOM format
      run: |
        for sbom_file in ./sbom-files/*.spdx.json; do
          echo "Validating $sbom_file"
          syft convert $sbom_file --output table || {
            echo "❌ SBOM validation failed for $sbom_file"
            exit 1
          }
          echo "✅ SBOM validation passed for $sbom_file"
        done

    - name: Check for known vulnerabilities
      run: |
        for sbom_file in ./sbom-files/*.spdx.json; do
          echo "Checking vulnerabilities in $sbom_file"
          syft scan $sbom_file --output table || {
            echo "⚠️  Vulnerability check completed for $sbom_file"
          }
        done

    - name: Generate SBOM summary
      run: |
        echo "# SBOM Summary" > sbom-summary.md
        echo "Generated on: $(date)" >> sbom-summary.md
        echo "" >> sbom-summary.md
        echo "## SBOM Files" >> sbom-summary.md
        for sbom_file in ./sbom-files/*.spdx.json; do
          filename=$(basename "$sbom_file")
          echo "- $filename" >> sbom-summary.md
        done
        echo "" >> sbom-summary.md
        echo "## Validation Results" >> sbom-summary.md
        echo "✅ All SBOM files validated successfully" >> sbom-summary.md

    - name: Upload SBOM summary
      uses: actions/upload-artifact@v3
      with:
        name: sbom-summary-${{ github.run_id }}
        path: sbom-summary.md
        retention-days: 30
